name: publish

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: store-core-version
        run: echo CORE_VERSION=`cat package.json | jq -r '.dependencies."@grouparoo/core"'` >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # If we are on the main branch, use the "latest" tag
      - name: Build Main Branch
        if: github.ref == 'refs/heads/main'
        id: docker_build_main
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: grouparoo/omnibus:latest, grouparoo/omnibus:v${{ env.CORE_VERSION }}
          build-args: "GROUPAROO_VERSION=${{ env.CORE_VERSION }}"
          secrets: |
            "npmrc=//registry.npmjs.org/:_authToken=${{ secrets.BOT_NPM_TOKEN }}"

      # If we are NOT on the main branch, do not use the "latest" tag
      - name: Build Other Branch
        if: github.ref != 'refs/heads/main'
        id: docker_build_branch
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: grouparoo/omnibus:v${{ env.CORE_VERSION }}
          build-args: "GROUPAROO_VERSION=${{ env.CORE_VERSION }}"
          secrets: |
            "npmrc=//registry.npmjs.org/:_authToken=${{ secrets.BOT_NPM_TOKEN }}"

  notify-terraform:
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'grouparoo/omnibus' }}
    needs: publish
    steps:
      - name: Notifier auth
        uses: getsentry/action-github-app-token@v1
        id: notifier_auth
        with:
          app_id: ${{ secrets.TERRAFORM_NOTIFIER_APP_ID }}
          private_key: ${{ secrets.TERRAFORM_NOTIFIER_APP_PRIVATE_KEY }}
      - name: Notify
        run: >-
          curl
          -X POST
          -H "Authorization: token ${{ steps.notifier_auth.outputs.token }}"
          -H "Accept: application/vnd.github.everest-preview+json"
          -H "Content-Type: application/json"
          https://api.github.com/repos/grouparoo/grouparoo-infra-apps/actions/workflows/update-docker-versions.yml/dispatches
          --data '{"ref": "main"}'
